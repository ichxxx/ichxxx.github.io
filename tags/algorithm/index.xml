<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on ichx&#39;s Blog</title>
    <link>https://ichxxx.github.io/tags/algorithm/</link>
    <description>Recent content in Algorithm on ichx&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 24 Dec 2019 23:44:22 +0800</lastBuildDate><atom:link href="https://ichxxx.github.io/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Morris Traversal方法遍历二叉树</title>
      <link>https://ichxxx.github.io/post/morris-traversal%E6%96%B9%E6%B3%95%E9%81%8D%E5%8E%86%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Tue, 24 Dec 2019 23:44:22 +0800</pubDate>
      
      <guid>https://ichxxx.github.io/post/morris-traversal%E6%96%B9%E6%B3%95%E9%81%8D%E5%8E%86%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>通常，实现二叉树遍历有两个常用的方法：一是递归，二是使用栈实现的迭代。 这两种方法都是O(n)的空间复杂度（递归本身占用stack空间或者用户自定义的stack） Morris Traversal方法只需要O(1)空间，而且同样可以在O(n)时间内完成。 要使用O(1)空间进行遍历，最大的难点在于</description>
    </item>
    
  </channel>
</rss>
